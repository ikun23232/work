<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kgc.dao.ProductDao">
    <select id="getProductBythreeCategoryName" resultType="Product">
        select
            easybuy_product.id,
            easybuy_product.name,
            description,
            price,
            stock,
            categoryLevelId,
            fileId,
            easybuy_product.isDel,
            easybuy_product.createTime,
            filePath
        from easybuy_product,easybuy_product_category,easybuy_file
        where categoryLevelId = easybuy_product_category.id
          and easybuy_file.id = easybuy_product.fileId
          and easybuy_product_category.name = #{categoryName}
    </select>

    <select id="getProductById" resultType="Product">
        SELECT p.id,
               p.name,
               description,
               price,
               stock,
               categoryLevelId,
               fileId,
               p.isDel,
               p.createTime,
               filePath,
               brandId,
               b.name AS brandName
        FROM easybuy_product p
                 LEFT JOIN
             easybuy_product_category c ON p.categoryLevelId = c.id
                 LEFT JOIN
             easybuy_file f ON f.id = p.fileId
                 LEFT JOIN
             easybuy_brand b ON b.id = p.brandId
        WHERE p.isDel = 0
          AND p.id = #{id}

    </select>

    <select id="getProductList" resultType="Product">
        SELECT
            p.id,
            p.name,
            description,
            price,
            stock,
            categoryLevelId as categoryId,
            fileId,
            p.isDel,
            p.createTime,
            filePath,
            b.name AS brandName

        FROM
            easybuy_product p
                LEFT JOIN
            easybuy_product_category c ON p.categoryLevelId = c.id
                LEFT JOIN
            easybuy_file f ON f.id = p.fileId
                LEFT JOIN
            easybuy_brand b ON b.id = p.brandId
        ORDER BY p.createTime DESC
    </select>
    <select id="getProductByOrder" resultType="Product">
        SELECT 	  easybuy_product.id,
                    easybuy_product.`name`,
                    description,
                    price,
                    stock,
                    categoryLevelId,
                    fileId,
                    easybuy_product.isDel,
                    easybuy_product.createTime,
                    filePath
        FROM easybuy_product,easybuy_file
        WHERE     easybuy_product.id
            IN(SELECT productId
               FROM easybuy_order_detail
               GROUP BY productId)
          AND fileId = easybuy_file.id
        LIMIT 0,4
    </select>
    <select id="getProductStockById" resultType="int">
        select stock from easybuy_product where id=#{id}
    </select>
    <update id="updateProductStockById" >
        update easybuy_product set stock=stock-#{delStock}  where id=#{id}
    </update>

    <select id="getSameFristCategoryProductByPid" resultType="Product">
        SELECT p.id,
               p.name,
               description,
               price,
               stock,
               categoryLevelId,
               fileId,
               p.isDel,
               p.createTime,
               c.name,
               parentId,
               type,
               filePath
        FROM easybuy_product p,
             easybuy_file f,
             easybuy_product_category c
        WHERE p.id = f.productId
          and p.categoryLevelId = c.id
          and p.isDel = 0
          AND parentId
            IN
              (SELECT id
               FROM easybuy_product_category
               WHERE parentId
                         IN
                     (SELECT parentId
                      FROM easybuy_product_category c
                      WHERE id
                                IN
                            (SELECT parentId
                             FROM easybuy_product_category c
                             WHERE id
                                       IN
                                   (SELECT p.categoryLevelId
                                    FROM easybuy_product p
                                    WHERE p.id = #{pid}))))
        limit 0,3
    </select>

    <update id="delProductById" >
        UPDATE easybuy_product p, easybuy_file f
        SET isDel = 1 , isDelete = 1
        WHERE p.fileId = f.id
        and p.id = #{id}
    </update>

    <select id="getProductPageList" resultType="Product">
        SELECT
            p.id,
            p.name,
            description,
            price,
            stock,
            categoryLevelId,
            fileId,
            p.isDel,
            p.createTime,
            filePath,
            b.name AS brandName
        FROM
            easybuy_product p
                LEFT JOIN
            easybuy_product_category c ON p.categoryLevelId = c.id
                LEFT JOIN
            easybuy_file f ON f.id = p.fileId
                LEFT JOIN
            easybuy_brand b ON b.id = p.brandId
        WHERE p.isDel = 0
        <if test="productName!=null and productName!=''">
            and p.name like CONCAT('%',#{productName},'%')
        </if>
        <if test="brandId>0">
            and p.brandId = #{brandId}
        </if>
        ORDER BY p.createTime DESC
    </select>

    <update id="upfile">
        update easybuy_file
        set productId = #{id}
        where id = #{fileId}
    </update>

    <update id="upProduct">
        update easybuy_file
        set productId = #{id}
        where id = #{fileId}
    </update>


    <insert id="addProduct" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO easybuy_product (name, price, description, stock, categoryLevelId,fileId,createTime, brandId)
        VALUES (#{name}, #{price}, #{description}, #{stock}, #{categoryLevelId},#{fileId},#{createTime}, #{brandId});
    </insert>

    <insert id="addfile" useGeneratedKeys="true" keyProperty="fileId">
        INSERT INTO easybuy_file (filePath, userId, createTime)
        VALUES (#{filePath},#{id},now());
    </insert>

    <update id="addStockById">
        update easybuy_product set stock=stock+#{stock} where id=#{id}
    </update>

    <select id="checkSameName" resultType="Product">
        SELECT id,
               name,
               description,
               price,
               stock,
               categoryLevelId,
               fileId,
               isDel,
               createTime,
               brandId
        FROM easybuy_product
        WHERE name = #{name}
        AND isDel = 0
    </select>

    <update id="updateProduct">
        update easybuy_product
        set name            = #{name},
            description     = #{description},
            createTime      = #{createTime},
            price           = #{price},
            stock           = #{stock},
            categoryLevelId = #{categoryLevelId},
            brandId=#{brandId}
        where id = #{id}
    </update>

    <update id="updatefile">
        update easybuy_file
        set filePath = #{filePath}
        where productId = #{id}
        AND isDelete = 0
    </update>

</mapper>